import unittest
import math

def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

def Ordenate(arr):
    return bubble_sort(arr)

class TestSortingAlgorithms(unittest.TestCase):

    def setUp(self):
        self.sort_function = Ordenate


    def test_empty_list(self):
        self.assertEqual(self.sort_function([]), [])


    def test_single_element_list(self):
        self.assertEqual(self.sort_function([1]), [1])


    def test_sorted_list(self):
        self.assertEqual(self.sort_function([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5])


    def test_reverse_sorted_list(self):
        self.assertEqual(self.sort_function([5, 4, 3, 2, 1]), [1, 2, 3, 4, 5])


    def test_unsorted_list(self):
        self.assertEqual(self.sort_function([3, 1, 4, 2, 5]), [1, 2, 3, 4, 5])


    def test_list_with_duplicates(self):
        self.assertEqual(self.sort_function([3, 1, 2, 2, 5, 3]), [1, 2, 2, 3, 3, 5])


    def test_list_with_negative_numbers(self):
        self.assertEqual(self.sort_function([-3, 1, -2, 2, 0, 5, -1]), [-3, -2, -1, 0, 1, 2, 5])


    def test_large_list(self):
        large_list = list(range(1000, 0, -1))
        sorted_large_list = list(range(1, 1001))
        self.assertEqual(self.sort_function(large_list), sorted_large_list)


if __name__ == '__main__':
    unittest.main(argv=['first-arg-is-ignored'], exit=False)



[INFO] The elapsed time was: 2.6177499294281006 segundos