import unittest
import math


def merge_sort(arr):
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    left = arr[:mid]
    right = arr[mid:]
    
    left = merge_sort(left)
    right = merge_sort(right)
    
    return merge(left, right)

def merge(left, right):
    result = []
    i = j = 0
    
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
    
    result += left[i:]
    result += right[j:]
    
    return result

def Ordenate(arr):
    return merge_sort(arr) 

class TestMergeSort(unittest.TestCase):

    def test_empty_list(self):
        self.assertEqual(Ordenate([]), [])
    
    def test_sorted_list(self):
        self.assertEqual(Ordenate([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5])
    
    def test_reverse_sorted_list(self):
        self.assertEqual(Ordenate([5, 4, 3, 2, 1]), [1, 2, 3, 4, 5])
    
    def test_duplicate_elements(self):
        self.assertEqual(Ordenate([3, 2, 3, 1, 2]), [1, 2, 2, 3, 3])
    
    def test_negative_numbers(self):
        self.assertEqual(Ordenate([-3, -2, -5, -1, -4]), [-5, -4, -3, -2, -1])

if __name__ == '__main__':
    unittest.main(argv=['first-arg-is-ignored'], exit=False)[INFO] The elapsed time was: 6.632912635803223 segundos