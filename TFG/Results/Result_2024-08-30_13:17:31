import unittest
import math

def Ordenate(arr):
    def counting_sort(arr):
        max_num = max(arr)
        count_arr = [0] * (max_num + 1)
        sorted_arr = [0] * len(arr)

        for num in arr:
            count_arr[num] += 1

        for i in range(1, len(count_arr)):
            count_arr[i] += count_arr[i - 1]

        for num in arr:
            sorted_arr[count_arr[num] - 1] = num
            count_arr[num] -= 1

        return sorted_arr

    return counting_sort(arr)

class TestSortingAlgorithms(unittest.TestCase):

    def setUp(self):
        self.sort_function = Ordenate


    def test_empty_list(self):
        self.assertEqual(self.sort_function([]), [])


    def test_single_element_list(self):
        self.assertEqual(self.sort_function([1]), [1])


    def test_sorted_list(self):
        self.assertEqual(self.sort_function([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5])


    def test_reverse_sorted_list(self):
        self.assertEqual(self.sort_function([5, 4, 3, 2, 1]), [1, 2, 3, 4, 5])


    def test_unsorted_list(self):
        self.assertEqual(self.sort_function([3, 1, 4, 2, 5]), [1, 2, 3, 4, 5])


    def test_list_with_duplicates(self):
        self.assertEqual(self.sort_function([3, 1, 2, 2, 5, 3]), [1, 2, 2, 3, 3, 5])


    def test_list_with_negative_numbers(self):
        self.assertEqual(self.sort_function([-3, 1, -2, 2, 0, 5, -1]), [-3, -2, -1, 0, 1, 2, 5])


    def test_large_list(self):
        large_list = list(range(1000, 0, -1))
        sorted_large_list = list(range(1, 1001))
        self.assertEqual(self.sort_function(large_list), sorted_large_list)


if __name__ == '__main__':
    unittest.main(argv=['first-arg-is-ignored'], exit=False)



[INFO] The elapsed time was: 2.2380497455596924 segundos