
import math

import unittest

def Ordenate(arr):
    if not arr:
        return []

    max_val = max(arr)
    min_val = min(arr)
    range_of_elements = max_val - min_val + 1

    count_arr = [0] * range_of_elements
    output_arr = [0] * len(arr)

    for num in arr:
        count_arr[num - min_val] += 1

    for i in range(1, len(count_arr)):
        count_arr[i] += count_arr[i - 1]

    for num in reversed(arr):
        output_arr[count_arr[num - min_val] - 1] = num
        count_arr[num - min_val] -= 1

    return output_arr

class TestOrdenate(unittest.TestCase):

    def test_empty_list(self):
        self.assertEqual(Ordenate([]), [])

    def test_single_element(self):
        self.assertEqual(Ordenate([1]), [1])

    def test_two_elements(self):
        self.assertEqual(Ordenate([2, 1]), [1, 2])

    def test_multiple_elements(self):
        self.assertEqual(Ordenate([5, 3, 2, 8, 6, 7, 1, 4]), [1, 2, 3, 4, 5, 6, 7, 8])

    def test_negative_elements(self):
        self.assertEqual(Ordenate([-5, -1, -7, -3]), [-7, -5, -3, -1])

    def test_mixed_positive_and_negative_elements(self):
        self.assertEqual(Ordenate([3, -2, -1, 0, 1, 2, -3]), [-3, -2, -1, 0, 1, 2, 3])

    def test_duplicate_elements(self):
        self.assertEqual(Ordenate([3, 2, 1, 2, 3, 1]), [1, 1, 2, 2, 3, 3])

if __name__ == '__main__':
    unittest.main(argv=['first-arg-is-ignored'], exit=False)
[INFO] The elapsed time was: 26.265050649642944 segundos